/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Amy Zhang
 * Date: October 28, 2023
 * For players to customize the question set they answer from
 * 
 */
import java.util.*; //read files using Scanner
import java.io.*; // write in files and catch error
import javax.swing.table.*; //edit tables

public class CustomQuestions extends javax.swing.JFrame {

    /**
     * Creates new form CustomQuestions
     */
    public CustomQuestions() {
        initComponents();
        updateTable();

    }
    
    /**
     * Reads Questions.csv file and updates table using file
     * Post-condition: table values correctly reflect values in file Questions.csv
     */
    public void updateTable() {
        //creating an empty table model to store updated values
        DefaultTableModel tableModel = (DefaultTableModel)questionsTable.getModel();
        tableModel.setRowCount(0);
        
        //open file in read mode
        try {
            Scanner readFile = new Scanner(new File(this.getClass().getResource("Questions.csv").getFile()));
            
            //reads each line in file
            int line = 0;
            while (readFile.hasNextLine()){
            
                //new scanner to read value in a line
                Scanner readLine = new Scanner(readFile.nextLine());
                readLine.useDelimiter(",");
            
                //storing values of a line in array
                String[] cells = new String[5];
                for (int i = 0; i < 5 && readLine.hasNext(); i++) cells[i] = readLine.next(); 
                
                //adds array to new row
                tableModel.addRow(cells);
                line++;
            }
            //finished editing tableModel
            readFile.close();
            questionsTable.setModel(tableModel);

        } catch (IOException e) { //required to have
            System.out.println("No Questions.csv file found");            
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtQuestion = new javax.swing.JTextField();
        lblQuestions = new javax.swing.JLabel();
        txtAnswer = new javax.swing.JTextField();
        lblAnswers = new javax.swing.JLabel();
        lblOptions = new javax.swing.JLabel();
        txtOption1 = new javax.swing.JTextField();
        txtOption2 = new javax.swing.JTextField();
        txtOption3 = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionsTable = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        btnResetToDefault = new javax.swing.JButton();
        lblError1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Custom Questions");

        lblQuestions.setText("Question:");

        lblAnswers.setText("Answer*:");

        lblOptions.setText("Multiple Choice Options*:");

        lblTitle.setFont(new java.awt.Font("Papyrus", 1, 24)); // NOI18N
        lblTitle.setText("Create Your Own Questions");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBack.setText("Done");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        questionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Question", "Answer", "Option 1", "Option 2", "Option 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(questionsTable);
        if (questionsTable.getColumnModel().getColumnCount() > 0) {
            questionsTable.getColumnModel().getColumn(0).setPreferredWidth(250);
        }

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        lblError.setForeground(new java.awt.Color(255, 0, 51));
        lblError.setText(" ");
        lblError.setToolTipText("");

        btnResetToDefault.setText("Reset to default");
        btnResetToDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetToDefaultActionPerformed(evt);
            }
        });

        lblError1.setForeground(new java.awt.Color(102, 102, 102));
        lblError1.setText("*not case sensitive");
        lblError1.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 273, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(237, 237, 237))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblQuestions)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAnswers)
                                        .addGap(23, 23, 23)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                                    .addComponent(txtAnswer)))
                            .addComponent(txtOption3, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblOptions))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblError1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(txtOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnBack)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnResetToDefault)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuestions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAnswers))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOptions)
                    .addComponent(txtOption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOption2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblError1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOption3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnRemove))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack)
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblError)
                            .addComponent(btnResetToDefault))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        lblError.setText(""); //resetting error message to empty
        
        //checks if all fields are not empty
        if (txtQuestion.getText().isEmpty() || txtAnswer.getText().isEmpty()) {
            lblError.setText("You are missing required information (Must include an answer and question)");
            return;
        }
        if (txtOption1.getText().isEmpty() || txtOption2.getText().isEmpty() || txtOption3.getText().isEmpty()) {
            lblError.setText("You are missing required information (Must have 3 options)");
            return;
        }

        //adds new question to file
        try {
            FileWriter file = new FileWriter(new File(this.getClass().getResource("Questions.csv").getFile()), /*append*/true);
            file.append(txtQuestion.getText() + "," + txtAnswer.getText().toLowerCase() + "," + txtOption1.getText().toLowerCase() + ","+ txtOption2.getText().toLowerCase() + ","+ txtOption3.getText().toLowerCase() + "\n"); //options are not case sensitive
            //done editing file
            file.close();
            updateTable();  
            
        } catch (IOException e) {  
            System.out.println("No Questions.csv file found");
            e.printStackTrace();
        } 
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //checks if no questions are added
        if (questionsTable.getRowCount() == 0) {
            lblError.setText("You must have at least 1 question");
            return;
        }
        
        //opens main menu, closes custom questions
        this.dispose();
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        lblError.setText(""); //resetting error message to empty
        
        ArrayList<String> updatedLines = new ArrayList<>(); //keeps track of not selected lines

        //adding questions from table to updatedLines, aside from selected rows
        try{
            Scanner readFile = new Scanner(new File(this.getClass().getResource("Questions.csv").getFile()));
            
            //loops through each line in file. Adds to updatedLines if not selected
            for (int lineNum = 0; readFile.hasNextLine(); lineNum++){
                boolean shouldRemove = false;
                String line = readFile.nextLine();
                
                //checks if line number is same as selected rows
                for (int removeLineNum : questionsTable.getSelectedRows()) {
                    if (removeLineNum == lineNum){
                        shouldRemove = true; //if any of selected rows match current, remove
                        break;
                    }
                }
                //adds to array if not selected
                if (!shouldRemove) updatedLines.add(line);
            }
            
            readFile.close(); //done reading file
            
        } catch (IOException e) {
            System.out.println("No Questions.csv file found");
            e.printStackTrace();
        }
        
        //Updates rows in file according to updatedLines
        try {
            FileWriter file = new FileWriter(new File(this.getClass().getResource("Questions.csv").getFile()));
            //adds all rows from updatedLines to file
            for (String line : updatedLines) file.write(line + "\n");
            //done editing file
            file.close();
            updateTable();  
            
        } catch (IOException e) {  
            System.out.println("No Questions.csv file found");
            e.printStackTrace();
        } 
        
        updateTable();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnResetToDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetToDefaultActionPerformed
        lblError.setText(""); //resetting error message to empty
        
        //resets contents in file to preset
        try {
            FileWriter file = new FileWriter(new File(this.getClass().getResource("Questions.csv").getFile())); //not appending
            //writes over all content in file
            file.write("Donner (Futur): nous _____,donnerons,donnerai,donneront,donnerez\n"
                    + "Être (Présent): ils/elles _____,sont,êtes,est,étaient\n"
                    + "Faire (Imparfait): nous _____,faisions,faisais,faisait,faisons\n"
                    + "Pouvoir (Conditionnel Présent): tu _____,pourrais,pouvons,pouvez,pouvais\n"
                    + "Avoir (Présent): nous ____,avons,avez,a,avions\n"
                    + "Aller (Présent): vous ____,allez,allons,alliez,allais\n"
                    + "Dire (Conditionnel présent): tu _____,dirais,diraiz,dirions,diraient\n"
                    + "Savoir (Futur Antérieur): nous _____,aurons su,ai su,aurai su,auras su\n");
            //done editing file
            file.close();
            updateTable();  
            
        } catch (IOException e) {  
            System.out.println("No Questions.csv file found");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnResetToDefaultActionPerformed

    /**
     * @param args the command lineNum arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomQuestions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnResetToDefault;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAnswers;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblError1;
    private javax.swing.JLabel lblOptions;
    private javax.swing.JLabel lblQuestions;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable questionsTable;
    private javax.swing.JTextField txtAnswer;
    private javax.swing.JTextField txtOption1;
    private javax.swing.JTextField txtOption2;
    private javax.swing.JTextField txtOption3;
    private javax.swing.JTextField txtQuestion;
    // End of variables declaration//GEN-END:variables
}
